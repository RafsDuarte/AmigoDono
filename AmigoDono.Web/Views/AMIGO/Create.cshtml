@model AmigoDono.Model.AMIGO
@{
    ViewBag.Title = "Cadastre-se";
}

<!DOCTYPE html>
<html>
<head>
    <script src="https://code.jquery.com/jquery-1.12.4.js"></script>
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
    <script src="~/Scripts/jquery-3.3.1.min.js"></script>
</head>
<body class="bg-light">
    @using (Html.BeginForm("Create", "AMIGO", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

        <div class="container" style="margin-top: 80px">
            <div class="py-5 text-center">
                <h2>Faça o seu cadastro</h2>
            </div>
            <div class="col-md-8" style="margin-left: 150px">
                <form>
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="row">
                        @*@Html.LabelFor(model => model.Imagem, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <span class="btn btn-default btn-file">
                                @Html.TextBoxFor(model => model.Imagem, new { @type = "file" })
                            </span>
                        </div>*@
                        <div class="col-md-12 mb-3">
                            @Html.LabelFor(model => model.Nome)
                            @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="mb-3">
                        @Html.LabelFor(model => model.DataNascimento)
                        <div class="input-group">
                            <div class="input-group-prepend">
                                <span class="input-group-text"></span>
                            </div>
                            @Html.EditorFor(model => model.DataNascimento, new { htmlAttributes = new { @class = "form-control", @id = "datepicker" } })
                            @Html.ValidationMessageFor(model => model.DataNascimento, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="mb-3">
                        @Html.LabelFor(model => model.CPF)
                        <div class="input-group">
                            <div class="input-group-prepend">
                                <span class="input-group-text"></span>
                            </div>
                            @Html.EditorFor(model => model.CPF, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.CPF, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="mb-3">
                        @Html.LabelFor(model => model.CNPJ)
                        <div class="input-group">
                            <div class="input-group-prepend">
                                <span class="input-group-text"></span>
                            </div>
                            @Html.EditorFor(model => model.CNPJ, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.CNPJ, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="mb-3">
                        @Html.LabelFor(model => model.Funcao)
                        <div class="input-group">
                            <div class="input-group-prepend">
                                <span class="input-group-text"></span>
                            </div>
                            @Html.EditorFor(model => model.Funcao, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Funcao, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="mb-3">
                        @Html.LabelFor(model => model.Ajuda)
                        <div class="input-group">
                            <div class="input-group-prepend">
                                <span class="input-group-text"></span>
                            </div>
                            @Html.EditorFor(model => model.Ajuda, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Ajuda, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="mb-3">
                        @Html.LabelFor(model => model.Senha)
                        <div class="input-group">
                            <div class="input-group-prepend">
                                <span class="input-group-text"></span>
                            </div>
                            @Html.EditorFor(model => model.Senha, new { htmlAttributes = new { @class = "form-control", @type = "password" } })
                            @Html.ValidationMessageFor(model => model.Senha, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="mb-3">
                        @Html.LabelFor(model => model.Email)
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @placeholder = "fulano@exemplo.com" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                    <div class="row">
                        <div class="col-md-5 mb-3">
                            @Html.LabelFor(model => model.Cidade)
                            @Html.EditorFor(model => model.Cidade, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Cidade, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-4 mb-3">
                            @Html.LabelFor(model => model.UF)
                            @Html.EditorFor(model => model.UF, new { htmlAttributes = new { @class = "custom-select d-block w-100 form-control" } })
                            @Html.ValidationMessageFor(model => model.UF, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-3 mb-3">
                            @Html.LabelFor(model => model.CEP)
                            @Html.EditorFor(model => model.CEP, new { htmlAttributes = new { @class = "form-control", @id = "txtCEP" } })
                            @Html.ValidationMessageFor(model => model.CEP, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-5 mb-3">
                            @Html.LabelFor(model => model.NomeLogradouro)
                            @Html.EditorFor(model => model.NomeLogradouro, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.NomeLogradouro, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-5 mb-3">
                            @Html.LabelFor(model => model.Logradouro)
                            @Html.EditorFor(model => model.Logradouro, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Logradouro, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-5 mb-3">
                            @Html.LabelFor(model => model.Numero)
                            @Html.EditorFor(model => model.Numero, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Numero, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-5 mb-3">
                            @Html.LabelFor(model => model.Complemento)
                            @Html.EditorFor(model => model.Complemento, new { htmlAttributes = new { @class = "form-control", @placeholder = "Rua dos lobos, nº 0" } })
                            @Html.ValidationMessageFor(model => model.Complemento, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-md-5 mb-3">
                            @Html.LabelFor(model => model.Bairro)
                            @Html.EditorFor(model => model.Bairro, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Bairro, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-5 mb-3">
                            @Html.LabelFor(model => model.Telefone)
                            @Html.EditorFor(model => model.Telefone, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Telefone, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-5 mb-3">
                            @Html.LabelFor(model => model.Celular)
                            @Html.EditorFor(model => model.Celular, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Celular, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <hr class="mb-4">
                    <button class="btn btn-primary btn-lg btn-block" type="submit">Concluir Cadastro</button>
                </form>
            </div>
        </div>
    }

    @section Scripts {

        @Scripts.Render("~/bundles/jqueryui")
        <script type="text/javascript" charset="utf-8">
            $(function () {
                $("#datepicker").datepicker({
                    yearRange: '1950:',
                    dateFormat: 'dd/mm/yy',
                    dayNames: ['Domingo', 'Segunda', 'Terça', 'Quarta', 'Quinta', 'Sexta', 'Sábado'],
                    dayNamesMin: ['D', 'S', 'T', 'Q', 'Q', 'S', 'S', 'D'],
                    dayNamesShort: ['Dom', 'Seg', 'Ter', 'Qua', 'Qui', 'Sex', 'Sáb', 'Dom'],
                    monthNames: ['Janeiro', 'Fevereiro', 'Março', 'Abril', 'Maio', 'Junho', 'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro'],
                    monthNamesShort: ['Jan', 'Fev', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'],
                    nextText: 'Próximo',
                    prevText: 'Anterior',
                    changeMonth: true,
                    changeYear: true,
                    showOtherMonths: true,
                    selectOtherMonths: true
                });
            });
        </script>
        <script>
            jQuery(function ($) {
                $("#txtTelefoneRes").mask("(99) 9999-9999");
                $("#txtTelefoneCel").mask("(99) 9 9999-9999");
                $("#txtCPF").mask("999.999.999-99");
                $("#txtCEP").mask("99999-999");

            });
        </script>

    }
</body>
</html>