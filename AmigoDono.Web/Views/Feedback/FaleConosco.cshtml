@model AmigoDono.Model.FEEDBACK
@{

    ViewBag.Title = "Fale Conosco";

}



<head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <meta name="keywords" content="Feedback Widget Responsive, Login form web template, Sign up Web Templates, Flat Web Templates, Login signup Responsive web template, Smartphone Compatible web template, free webdesigns for Nokia, Samsung, LG, SonyEricsson, Motorola web design" />
    <!-- //for-mobile-apps -->
    <link href='//fonts.googleapis.com/css?family=Amaranth:400,400italic,700,700italic' rel='stylesheet' type='text/css'>
    <link href='//fonts.googleapis.com/css?family=Josefin+Slab:400,100,100italic,300,300italic,400italic,600,600italic,700,700italic' rel='stylesheet' type='text/css'>
    <link href='//fonts.googleapis.com/css?family=Open+Sans:400,300,300italic,400italic,600,600italic,700,700italic,800,800italic' rel='stylesheet' type='text/css'>
    <link href="~/Content/css/feedback.css" rel="stylesheet" type="text/css" media="all" />
</head>
<body>
    <div class="content">
        <h1>Dê sua opinião a respeito do nosso trabalho</h1>
        <div class="main">
       @using (Html.BeginForm("Create", "FEEDBACK", FormMethod.Post))
        {
             
             @Html.AntiForgeryToken()

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <h5>Nome</h5>
            <input type="text" name="Nome" value="Digite aqui" onfocus="this.value = '';" onblur="if (this.value == '') {this.value = 'Digite aqui';}" required="">
            @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
            <h5>Email</h5>
            <input type="text" name="Email" value="rafael.lduarte@gmail.com" onfocus="this.value = '';" onblur="if (this.value == '') {this.value = 'rafael.lduarte@gmail.com';}" required="">
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            <h5>Sua opinião</h5>
            <textarea name="Opiniao" onfocus="this.value = '';" onblur="if (this.value == '') {this.value = 'Digite aqui';}" required="">Digite aqui</textarea>
            @Html.ValidationMessageFor(model => model.Opiniao, "", new { @class = "text-danger" })
            <h5>Há algo que você gostaria de nos dizer?</h5>
            <textarea name="Feedback" onfocus="this.value = '';" onblur="if (this.value == '') {this.value = 'Dugite aqui';}" required="">Digite aqui</textarea>
            @Html.ValidationMessageFor(model => model.Feedback, "", new { @class = "text-danger" })

            <input type="submit" value="Enviar Feedback">
        }


        </div>

    </div>

</body>


@*using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>FEEDBACK</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.IDF, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.IDF, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.IDF, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Opiniao, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Opiniao, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Opiniao, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Feedback, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Feedback, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Feedback, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}*@

<div>
    @Html.ActionLink("Voltar", "Index", "Home")
</div>
